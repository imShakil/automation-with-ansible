
module "vpc" {
  source      = "git::https://github.com/imShakil/tfmodules.git//aws/vpc"
  prefix      = var.prefix
  cidr_block  = var.cidr_block
  subnet_size = 2
}

module "db" {
  source             = "git::https://github.com/imShakil/tfmodules.git//aws/rds"
  prefix             = var.prefix
  rds_name           = var.rds_name
  rds_admin          = var.rds_admin
  rds_admin_password = var.rds_admin_password
  private_subnets    = module.vpc.vpc_attribute.private_subnet_ids
  security_group_ids = [module.vpc.vpc_attribute.security_group_id]
}

resource "random_integer" "rint" {
  min = 0
  max = length(module.vpc.vpc_attribute.public_subnet_ids) - 1
  keepers = {
    prefix = var.prefix
  }
}
module "instance" {
  source                 = "git::https://github.com/imShakil/tfmodules.git//aws/instance"
  vpc_security_group_ids = [module.vpc.vpc_attribute.security_group_id]
  subnet_id              = module.vpc.vpc_attribute.public_subnet_ids[random_integer.rint.result]
  ami_id                 = var.ami_id
  prefix                 = var.prefix
  instance_type          = var.instance_type
  ssh_key_pair           = var.ssh_key_pair
  instance_number        = 1
}

resource "null_resource" "generate_inventory" {
  provisioner "local-exec" {
    command = <<EOT
#!/bin/bash
set -e

cat > ../ansible/inventory.ini <<EOF
[app]
${module.instance.instance_attribute.public_ip[0]}

[all:vars]
ansible_user="ec2-user"
ansible_ssh_private_key_file=~/.ssh/id_rsa
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
EOF

echo "Inventory file generated at ../ansible/inventory.ini"
EOT
  }

  triggers = {
    public_ip = module.instance.instance_attribute.public_ip[0]
  }

  depends_on = [module.instance]
}

resource "local_file" "ansible_vars" {
  content = <<EOT
---
# Generated by Terraform
mysql_admin_user: "${var.rds_admin}"
mysql_admin_password: "${var.rds_admin_password}"
rds_endpoint: "${split(":", module.db.rds_info.endpoint)[0]}"
database_name: "${var.rds_name}"
app_server_ip: "${module.instance.instance_attribute.public_ip[0]}"
EOT

  filename = "../ansible/vars/rds.yml"

  depends_on = [module.db, module.instance]
}
